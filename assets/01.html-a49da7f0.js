import{_ as p,r as o,o as i,c,d as n,e as a,b as t,t as u,f as e}from"./app-19e0b0f0.js";const r={},d=n("h2",{id:"_1-1官网",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1官网","aria-hidden":"true"},"#"),a(" 1.1官网")],-1),k={href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),h={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},m=e('<h2 id="_1-2介绍与描述" tabindex="-1"><a class="header-anchor" href="#_1-2介绍与描述" aria-hidden="true">#</a> 1.2介绍与描述</h2><p>Vue 是一套用来动态构建用户界面的渐进式JavaScript框架<br> ○构建用户界面：把数据通过某种办法变成用户界面<br> ○渐进式：Vue可以自底向上逐层的应用，简单应用只需要一个轻量小巧的核心库，复杂应用可以引入各式各样的Vue插件</p><figure><img src="https://jihulab.com/byzh123/images/raw/images/pictures/2022/08/9_23_2_16_202208092302515.png" alt="Vue" tabindex="0" loading="lazy"><figcaption>Vue</figcaption></figure><h2 id="_1-3-vue-的特点" tabindex="-1"><a class="header-anchor" href="#_1-3-vue-的特点" aria-hidden="true">#</a> 1.3. Vue 的特点</h2><ol><li><p>遵循MVVM模式</p></li><li><p>编码简洁，体积小，运行效率高，适合移动/PC端开发</p></li><li><p>它本身只关注 UI，可以引入其它第三方库开发项目</p></li><li><p>采用组件化模式，提高代码复用率、且让代码更好维护</p></li><li><p>声明式编码，让编码人员无需直接操作DOM，提高开发效率</p></li><li><p>使用虚拟DOM 和 Diff算法，尽量复用DOM节点</p></li></ol><h2 id="_1-4与其他-js-框架的关联" tabindex="-1"><a class="header-anchor" href="#_1-4与其他-js-框架的关联" aria-hidden="true">#</a> 1.4与其他 JS 框架的关联</h2><p>借鉴 angular 的 模板 和 数据绑定 技术<br> 借鉴 react 的 组件化 和 虚拟DOM 技术</p><h2 id="_1-5vue-周边库" tabindex="-1"><a class="header-anchor" href="#_1-5vue-周边库" aria-hidden="true">#</a> 1.5Vue 周边库</h2><ul><li>vue-cli：vue 脚手架</li><li>vue-router：路由</li><li>vuex：状态管理（它是 vue 的插件但是没有用 vue-xxx 的命名规则）</li><li>vue-lazyload：图片懒加载</li><li>vue-scroller：页面滑动相关</li><li>mint-ui：基于 vue 的 UI 组件库（移动端）</li><li>element-ui：基于 vue 的 UI 组件库（PC 端）</li></ul><h2 id="_1-6-vue配置" tabindex="-1"><a class="header-anchor" href="#_1-6-vue配置" aria-hidden="true">#</a> 1.6 Vue配置</h2><h3 id="前置工作" tabindex="-1"><a class="header-anchor" href="#前置工作" aria-hidden="true">#</a> 前置工作</h3><ol><li>给浏览器安装 Vue Devtools 插件</li><li>标签引入Vue包</li><li>阻止vue在启动时生成生产提示Vue.config.productionTip = false（可选）</li><li>favicon 需要将页签图标放在项目根路径，重新打开就有了（shfit+F5 强制刷新）</li></ol><h3 id="配置选项" tabindex="-1"><a class="header-anchor" href="#配置选项" aria-hidden="true">#</a> 配置选项</h3>',13),_=n("li",null,[n("p",null,"想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象")],-1),g=n("li",null,[n("p",null,"root 容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法")],-1),b=n("li",null,[n("p",null,"root 容器里的代码被称为Vue模板")],-1),f=n("li",null,[n("p",null,"Vue 实例与容器是一一对应的")],-1),x=n("li",null,[n("p",null,"真实开发中只有一个Vue实例，并且会配合着组件一起使用")],-1),V=n("br",null,null,-1),j=n("strong",null,"注意区分：js 表达式 和 js代码（语句）",-1),y=n("ul",null,[n("li",null,[a("表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方"),n("br"),n("code",null,"a a+b demo(1) x === y ? ‘a’ : ‘b’")]),n("li",null,[a("js代码（语句）"),n("br"),n("code",null,"if(){} for(){}")])],-1),q=e(`<li><p>一旦data中的数据发生变化，那么模板中用到该数据的地方也会自动更新(Vue实现的响应式)</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 引入Vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 准备好一个容器 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello，{{name.toUpperCase()}}，{{address}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">//阻止 vue 在启动时生成生产提示。</span>

	<span class="token comment">//创建Vue实例</span>
	<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&#39;#demo&#39;</span><span class="token punctuation">,</span> <span class="token comment">//el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串。</span>
		<span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//data中用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象。</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;hello,world&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">address</span><span class="token operator">:</span><span class="token string">&#39;北京&#39;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1);function D(l,M){const s=o("ExternalLinkIcon");return i(),c("div",null,[d,n("p",null,[a("英文官网: "),n("a",k,[a("https://vuejs.org/"),t(s)]),v,a(" 中文官网: "),n("a",h,[a("https://cn.vuejs.org/"),t(s)])]),m,n("ol",null,[_,g,b,f,x,n("li",null,[n("p",null,[a(u(l.xxx)+"中的 xxx 要写 js 表达式，且 xxx 可以自动读取到data中的所有属性",1),V,j]),y]),q])])}const w=p(r,[["render",D],["__file","01.html.vue"]]);export{w as default};
