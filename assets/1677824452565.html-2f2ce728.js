import{_ as e,o as d,c,f as o}from"./app-19e0b0f0.js";const a={},n=o(`<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p>比较常用的包管理工具</p><p>新版的<code>node.js</code>自带了<code>npm</code>，无需额外安装</p><h3 id="版本号" tabindex="-1"><a class="header-anchor" href="#版本号" aria-hidden="true">#</a> 版本号</h3><p><code>npm</code>的版本号分三个部分：主版本号.次版本号.补丁版本号</p><ul><li>主版本号： 当API发生改变，并与之前的版本不兼容的时候</li><li>次版本号： 当增加了功能，但是向后兼容的时候</li><li>补丁版本号： 当做了向后兼容的缺陷修复的时候</li></ul><h3 id="、-和" tabindex="-1"><a class="header-anchor" href="#、-和" aria-hidden="true">#</a> ~ 、 ^ 和 *</h3><ul><li><code>~</code>会匹配最近的小版本依赖包，比如<code>~1.2.3</code>会匹配所有<code>1.2.x</code>版本，但是不包括<code>1.3.0</code></li><li><code>^</code>会匹配最新的大版本依赖包，比如<code>^1.2.3</code>会匹配所有<code>1.x.x</code>的包，包括<code>1.3.0</code>，但是不包括<code>2.0.0</code></li><li>什么前缀也没有，比如<code>1.2.3</code>，指定特定的版本</li><li><code>*</code>安装最新版本的依赖包。可能会造成版本不兼容，<strong>慎用</strong></li></ul><h3 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令" aria-hidden="true">#</a> 基本命令</h3><ul><li><code>n\`\`pm -v</code>：<br> 查看版本号</li><li><code>npm config list</code>：<br> 查看配置信息，比如<code>npm</code>源等</li><li><code>npm init</code>：<br> 初始化<code>package.json</code>。参数<code>-y</code>跳过输入自动生成</li><li><code>npm install</code>：<br> 根据<code>package.json</code>的配置安装插件。缩写<code>npm i</code></li><li><code>npm i 包名</code>：<br> 安装某包。缩写<code>npm i 包名</code>。参数<code>-g</code>全局安装；参数<code>--save</code>(缩写<code>-S</code>)保存到<code>package.json</code>的依赖中；参数<code>--save-dev</code>(缩写<code>-D</code>)保存到<code>package.json</code>的开发环境依赖中</li><li><code>npm update</code>：<br> 更新。参数类似<code>npm install</code>。不带包名表示<code>package.json</code>里面的所有依赖更新</li><li><code>npm uninstall</code>：<br> 卸载。参数类似<code>npm install</code>。不带包名表示卸载<code>package.json</code>里面的所有依赖</li><li><code>npm run dev</code>：<br> 执行<code>dev</code>命令。<code>dev</code>是在<code>package.json</code>的<code>scripts</code>中配置的命令</li><li><code>npm install --production</code>：<br> 只有<code>dependencies</code>节点下的模块会下载到<code>node_modules</code>目录中，<code>devDependencies</code>节点下的模块不会下载到<code>node_modules</code>目录<code>devDependencies</code>节点下的模块是我们在开发时需要用的，比如项目中使用的 <code>gulp</code> ，压缩<code>css</code>、<code>js</code>的模块。<br> 这些模块在我们的项目部署后是不需要的，所以我们可以使用 <code>-save-dev</code> 的形式安装。像 <code>express</code> 这些模块是项目运行必备的，应该安装在 <code>dependencies</code> 节点下，所以我们应该使用 <code>-save</code> 的形式安装。</li></ul><h3 id="修改npm源" tabindex="-1"><a class="header-anchor" href="#修改npm源" aria-hidden="true">#</a> 修改NPM源</h3><p><code>npm</code>安装的时候太慢，最好的方法就是修改<code>npm</code>的源。<br> 国内有很多<code>npm</code>源可以选择，比较有名的就是淘宝<code>npm</code>镜像。</p><h3 id="查看npm源地址" tabindex="-1"><a class="header-anchor" href="#查看npm源地址" aria-hidden="true">#</a> 查看npm源地址</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config get registry\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="临时使用" tabindex="-1"><a class="header-anchor" href="#临时使用" aria-hidden="true">#</a> 临时使用</h3><p>在<code>npm install XXX</code>时加入<code>--registry URL</code>即可，不会影响到本地配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> koa <span class="token parameter variable">--registry</span> https://registry.npm.taobao.org 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="全局修改" tabindex="-1"><a class="header-anchor" href="#全局修改" aria-hidden="true">#</a> 全局修改：</h3><p>修改全局<code>npm</code>配置，以后都会使用修改后的源了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="重置为官方源" tabindex="-1"><a class="header-anchor" href="#重置为官方源" aria-hidden="true">#</a> 重置为官方源</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmjs.org/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>备注</strong>：需要经常切换源的话，推荐使用 <code>nrm</code> 管理 <code>npm</code> 源</p>`,23),s=[n];function i(r,l){return d(),c("div",null,s)}const p=e(a,[["render",i],["__file","1677824452565.html.vue"]]);export{p as default};
