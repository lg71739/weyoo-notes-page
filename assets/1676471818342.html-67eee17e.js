import{_ as i,r as s,o as t,c as r,d as a,e,b as l,f as c}from"./app-19e0b0f0.js";const d={},g={href:"https://hub.docker.com/_/nginx/tags",target:"_blank",rel:"noopener noreferrer"},o=c(`<h2 id="下载镜像" tabindex="-1"><a class="header-anchor" href="#下载镜像" aria-hidden="true">#</a> 下载镜像</h2><p>执行命令，指定下载版本</p><div class="language-shel line-numbers-mode" data-ext="shel"><pre class="language-shel"><code>docker pull nginx:1.25.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/05/31_10_44_53_image-20230531104453574.png" alt="image-20230531104453574" tabindex="0" loading="lazy"><figcaption>image-20230531104453574</figcaption></figure><h2 id="启动临时实例" tabindex="-1"><a class="header-anchor" href="#启动临时实例" aria-hidden="true">#</a> 启动临时实例</h2><p>为了能够得到nginx的默认配置，我们先通过启动一个临时实例，将默认的容器配置拷贝出来。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-d</span> nginx:1.25.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/05/31_10_48_54_image-20230531104854013.png" alt="image-20230531104854013" tabindex="0" loading="lazy"><figcaption>image-20230531104854013</figcaption></figure><h2 id="拷贝文件" tabindex="-1"><a class="header-anchor" href="#拷贝文件" aria-hidden="true">#</a> 拷贝文件</h2><p>创建Nginx配置文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /mydata/nginx
<span class="token builtin class-name">cd</span> /mydata/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将容器内的默认配置，拷贝到当前文件夹**[注意: 后面的点不可缺少]**</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> container <span class="token function">cp</span> nginx:/etc/nginx <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/28_17_35_28_image-20230828173528199.png" alt="image-20230828173528199" tabindex="0" loading="lazy"><figcaption>image-20230828173528199</figcaption></figure><p>为了方便管理，将文件夹重命名为conf文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> nginx/ conf/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/05/31_10_53_37_image-20230531105337696.png" alt="image-20230531105337696" tabindex="0" loading="lazy"><figcaption>image-20230531105337696</figcaption></figure><h2 id="终止并删除临时容器" tabindex="-1"><a class="header-anchor" href="#终止并删除临时容器" aria-hidden="true">#</a> 终止并删除临时容器</h2><p>通过命令将临时容器终止并删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 终止</span>
<span class="token function">docker</span> stop nginx
<span class="token comment"># 删除</span>
<span class="token function">docker</span> <span class="token function">rm</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/05/31_10_55_47_image-20230531105547538.png" alt="image-20230531105547538" tabindex="0" loading="lazy"><figcaption>image-20230531105547538</figcaption></figure><h2 id="创建正式实例" tabindex="-1"><a class="header-anchor" href="#创建正式实例" aria-hidden="true">#</a> 创建正式实例</h2><p>执行如下命令创建新的实例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-v</span> /mydata/nginx/html:/usr/share/nginx/html <span class="token parameter variable">-v</span> /mydata/nginx/logs:/var/log/nginx <span class="token parameter variable">-v</span> /mydata/nginx/conf:/etc/nginx <span class="token parameter variable">-d</span> nginx:1.25.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/05/31_11_1_1_image-20230531110101053.png" alt="image-20230531110101053" tabindex="0" loading="lazy"><figcaption>image-20230531110101053</figcaption></figure><h2 id="验证安装" tabindex="-1"><a class="header-anchor" href="#验证安装" aria-hidden="true">#</a> 验证安装</h2><p>执行如下命令，在html文件夹下创建index.html</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &quot;&lt;h1&gt;Hello Nginx&lt;/h1&gt;&quot; &gt; html/index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/28_17_38_44_image-20230828173844147.png" alt="image-20230828173844147" tabindex="0" loading="lazy"><figcaption>image-20230828173844147</figcaption></figure><p>浏览器访问虚拟机IP地址 <code>http://ip地址</code></p><p>出现如下界面，表示安装成功</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/28_17_39_18_image-20230828173918544.png" alt="image-20230828173918544" tabindex="0" loading="lazy"><figcaption>image-20230828173918544</figcaption></figure>`,32);function p(m,u){const n=s("ExternalLinkIcon");return t(),r("div",null,[a("blockquote",null,[a("p",null,[e("DockerHub地址: "),a("a",g,[e("https://hub.docker.com/_/nginx/tags"),l(n)])])]),o])}const b=i(d,[["render",p],["__file","1676471818342.html.vue"]]);export{b as default};
