import{_ as n,o as a,c as s,f as t}from"./app-19e0b0f0.js";const e={},l=t(`<p>在使用mybatis进行开发的时候，由于可以动态拼接sql，这样大大方便了我们。但是也有一定的问题，当我们动态sql拼接的块很多的时候，我们要想从*mapper.xml中直接找出完整的sql就会非常的难，这个时候经常会需要把组合之后的完整sql打印出来。</p><p>在 MyBatis 配置文件 mybatis-config.xml 里面添加一项 setting 来选择其它日志实现，可选的值有：SLF4J、LOG4J、LOG4J2、JDK_LOGGING、COMMONS_LOGGING、STDOUT_LOGGING、NO_LOGGING，或者是实现了 org.apache.ibatis.logging.Log 接口，且构造方法以字符串为参数的类完全限定名。</p><h2 id="使用mybatis的内置日志工厂" tabindex="-1"><a class="header-anchor" href="#使用mybatis的内置日志工厂" aria-hidden="true">#</a> 使用Mybatis的内置日志工厂</h2><p>使用Mybatis的内置日志工厂打印sql日志</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>STDOUT_LOGGING<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现效果如下：</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/03/13_16_56_39_1664286561972173.jpg.jpeg" alt="1.jpg" tabindex="0" loading="lazy"><figcaption>1.jpg</figcaption></figure><h2 id="使用log4j打印sql日志" tabindex="-1"><a class="header-anchor" href="#使用log4j打印sql日志" aria-hidden="true">#</a> 使用log4j打印SQL日志</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOG4J<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类路径下建立loj4j.properties文件，配置内容如下：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">### 设置Logger输出级别和输出目的地 ### debug更详细,如果设为info那么打印出的表数据遇到字符串就不显示，此外还有logfile</span>
<span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">debug,stdout</span>
 
<span class="token comment">### 把日志信息输出到控制台 ###</span>
<span class="token key attr-name">log4j.appender.stdout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.ConsoleAppender </span>
<span class="token comment">#log4j.appender.stdout.Target=System.err</span>
<span class="token key attr-name">log4j.appender.stdout.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.SimpleLayout </span>
 
<span class="token comment">### 把日志信息输出到文件：jbit.log ###</span>
<span class="token comment">#log4j.appender.logfile=org.apache.log4j.FileAppender</span>
<span class="token comment">#log4j.appender.logfile.File=mybatis.log</span>
<span class="token comment">#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</span>
<span class="token comment">#log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n</span>
 
<span class="token comment">###显示SQL语句部分</span>
<span class="token key attr-name">log4j.logger.com.mybatis</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
<span class="token comment">#log4j.logger.com.mybatis.common.jdbc.SimpleDataSource=DEBUG</span>
<span class="token comment">#log4j.logger.com.mybatis.common.jdbc.ScriptRunner=DEBUG</span>
<span class="token comment">#log4j.logger.com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG</span>
<span class="token comment">#log4j.logger.java.sql.Connection=DEBUG</span>
<span class="token comment">#log4j.logger.java.sql.Statement=DEBUG</span>
<span class="token comment">#log4j.logger.java.sql.PreparedStatement=DEBUG</span>
<span class="token comment">#log4j.logger.java.sql.ResultSet=DEBUG</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果如下：</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/03/13_16_56_39_1664286884609428.jpg.jpeg" alt="2.jpg" tabindex="0" loading="lazy"><figcaption>2.jpg</figcaption></figure>`,13),p=[l];function o(i,c){return a(),s("div",null,p)}const r=n(e,[["render",o],["__file","50-1678693682152.html.vue"]]);export{r as default};
