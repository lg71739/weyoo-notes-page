import{_ as n,r,o as i,c as l,d as a,e,b as o,f as t}from"./app-19e0b0f0.js";const d={},c=t(`<h2 id="下载并安装" tabindex="-1"><a class="header-anchor" href="#下载并安装" aria-hidden="true">#</a> 下载并安装</h2><h3 id="下载镜像" tabindex="-1"><a class="header-anchor" href="#下载镜像" aria-hidden="true">#</a> 下载镜像</h3><p>执行命令，指定下载版本</p><div class="language-shel line-numbers-mode" data-ext="shel"><pre class="language-shel"><code>docker pull rabbitmq:management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/07/14_10_42_44_image-20230714104237833.png" alt="image-20230714104237833" tabindex="0" loading="lazy"><figcaption>image-20230714104237833</figcaption></figure><h3 id="运行实例" tabindex="-1"><a class="header-anchor" href="#运行实例" aria-hidden="true">#</a> 运行实例</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> rabbitmq <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">5671</span>:5671 <span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 <span class="token parameter variable">-p</span> <span class="token number">4369</span>:4369 <span class="token parameter variable">-p</span> <span class="token number">25672</span>:25672 <span class="token parameter variable">-p</span> <span class="token number">15671</span>:15671 <span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672 rabbitmq:management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/07/14_10_43_14_image-20230714104314952.png" alt="image-20230714104314952" tabindex="0" loading="lazy"><figcaption>image-20230714104314952</figcaption></figure>`,8),p={class:"hint-container details"},m=t("<summary>端口及端口用途</summary><table><thead><tr><th>端口号</th><th>端口用途</th></tr></thead><tbody><tr><td>4369,25672</td><td>Erlang发现 &amp; 集群端口</td></tr><tr><td>5672,5671</td><td>AMQP端口</td></tr><tr><td>15672</td><td>Web管理后台端口</td></tr><tr><td>61613,61614</td><td>STOMP协议端口</td></tr><tr><td>1883,8883</td><td>MQTT协议端口</td></tr></tbody></table>",2),h=a("p",null,"更多端口详情 请参考:",-1),b={href:"https://www.rabbitmq.com/networking.html#ports",target:"_blank",rel:"noopener noreferrer"},u=a("h2",{id:"访问",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#访问","aria-hidden":"true"},"#"),e(" 访问")],-1),g=a("p",null,[e("浏览器访问"),a("code",null,"http://localhost:15672"),e("，打开RabbitMQ的控制台")],-1),_=a("p",null,[e("默认登录账号密码均为"),a("code",null,"guest")],-1),k=a("figure",null,[a("img",{src:"https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/07/14_10_45_0_image-20230714104500389.png",alt:"image-20230714104500389",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20230714104500389")],-1);function f(v,x){const s=r("ExternalLinkIcon");return i(),l("div",null,[c,a("details",p,[m,a("blockquote",null,[h,a("p",null,[a("a",b,[e("https://www.rabbitmq.com/networking.html#ports"),o(s)])])])]),u,g,_,k])}const y=n(d,[["render",f],["__file","1676473818343.html.vue"]]);export{y as default};
