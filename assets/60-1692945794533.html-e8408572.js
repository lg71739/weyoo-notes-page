import{_ as t,r as l,o as r,c as d,d as a,e as n,b as s,f as i}from"./app-19e0b0f0.js";const c={},o=i('<h1 id="rabbitmq的安装与配置" tabindex="-1"><a class="header-anchor" href="#rabbitmq的安装与配置" aria-hidden="true">#</a> RabbitMQ的安装与配置</h1><h2 id="资源准备" tabindex="-1"><a class="header-anchor" href="#资源准备" aria-hidden="true">#</a> 资源准备</h2><p>准备好RabbitMQ安装包和运行环境Erlang安装包</p><h3 id="rabbitmq下载" tabindex="-1"><a class="header-anchor" href="#rabbitmq下载" aria-hidden="true">#</a> RabbitMQ下载:</h3>',4),p={href:"https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.8.19",target:"_blank",rel:"noopener noreferrer"},b=a("figure",null,[a("img",{src:"https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_48_37_5f54924944c146aebcd83f48cbb32239.png",alt:"image.png",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image.png")],-1),u=a("h3",{id:"erlang下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#erlang下载","aria-hidden":"true"},"#"),n(" Erlang下载:")],-1),h={href:"https://erlang.org/download/otp_src_24.0.tar.gz",target:"_blank",rel:"noopener noreferrer"},m={class:"hint-container info"},v=a("p",{class:"hint-container-title"},"Github源",-1),g=a("p",null,"2022.07.21更新：",-1),k=a("p",null,"我发现github也提供了erlang的下载，比官网快太多了，推荐使用",-1),f=a("p",null,"通过erlang.org提供的下载的按钮，直接下载，",-1),_=a("br",null,null,-1),x={href:"https://github.com/erlang/otp/releases/download/OTP-24.3.4.2/otp_src_24.3.4.2.tar.gz",target:"_blank",rel:"noopener noreferrer"},q=i(`<figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_43_0_fb23b39ed677416eb860f2826fa70090.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="安装erlang" tabindex="-1"><a class="header-anchor" href="#安装erlang" aria-hidden="true">#</a> 安装ErLang</h2><h3 id="解压缩erlang压缩包" tabindex="-1"><a class="header-anchor" href="#解压缩erlang压缩包" aria-hidden="true">#</a> 解压缩Erlang压缩包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/
<span class="token function">mkdir</span> erlang
<span class="token builtin class-name">cd</span> erlang/
<span class="token function">tar</span> <span class="token parameter variable">-zxf</span> /home/otp_src_24.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc glibc-devel <span class="token function">make</span> ncurses-devel openssl-devel xmlto perl <span class="token function">wget</span> gtk2-devel binutils-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>本步视情况而定，如果确定有这些依赖，可以不执行</p><p>也可以在后续步骤中，提示缺少依赖时，再去执行对应的依赖安装</p><p>配置安装资源(过程较为漫长,请耐心等待)</p><h3 id="配置安装路径" tabindex="-1"><a class="header-anchor" href="#配置安装路径" aria-hidden="true">#</a> 配置安装路径</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#切换路径</span>
<span class="token builtin class-name">cd</span> /usr/local/erlang/otp_src_24.0/
<span class="token comment"># 配置安装路径</span>
./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/erlang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终执行结果如下图，虽然有Warning标识，忽略即可。</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_48_44_a6049deeddfc4a9cbe35b7aaf74551ec.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意事项:</p><p>如果过程中出现如下异常，请尝试执行：yum -y install ncurses-devel 命令来安装相关依赖</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_48_47_07fcb5a9c84f4cbca7acba619abd8dc3.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure></div><h3 id="编译并安装" tabindex="-1"><a class="header-anchor" href="#编译并安装" aria-hidden="true">#</a> 编译并安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> 
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此过程较为漫长，请耐心等待</p><p>最终执行结果如下图(错误请忽略即可，其实已经安装成功)</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_48_51_0b075950100d4a8696ea32e56767bda6.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="验证安装成功与否" tabindex="-1"><a class="header-anchor" href="#验证安装成功与否" aria-hidden="true">#</a> 验证安装成功与否</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#添加环境变量</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=$PATH:/usr/local/erlang/bin&#39;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token comment">#刷新环境变量</span>
<span class="token builtin class-name">source</span> /etc/profile
<span class="token comment">#执行erlang命令</span>
erl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果:</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_48_54_dfe8dc1bb4154ead9a33b42061751a34.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><blockquote><p>输入<code>halt().</code>可退出当前erlang命令行</p></blockquote><h2 id="安装rabbitmq" tabindex="-1"><a class="header-anchor" href="#安装rabbitmq" aria-hidden="true">#</a> 安装RabbitMQ</h2><h3 id="解压缩" tabindex="-1"><a class="header-anchor" href="#解压缩" aria-hidden="true">#</a> 解压缩</h3><p>由于是tar.xz格式，需要先安装xz解压工具</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> xz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>正式开始解压缩</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local
<span class="token comment"># 第一次解压</span>
/bin/xz <span class="token parameter variable">-d</span> /home/liguangni/rabbitmq-server-generic-unix-3.8.19.tar.xz
<span class="token comment"># 第二次解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> rabbitmq-server-generic-unix-3.8.19.tar
<span class="token comment"># 重命名</span>
<span class="token function">mv</span> rabbitmq_server-3.8.19/ rabbitmq/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=$PATH:/usr/local/rabbitmq/sbin&#39;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token comment"># 刷新环境变量</span>
<span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启用web管理界面" tabindex="-1"><a class="header-anchor" href="#启用web管理界面" aria-hidden="true">#</a> 启用Web管理界面</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmq-plugins <span class="token builtin class-name">enable</span> rabbitmq_management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行结果:</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_48_58_2c4c929d27bf404bbb17cf432720c132.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="启动rabbitmq" tabindex="-1"><a class="header-anchor" href="#启动rabbitmq" aria-hidden="true">#</a> 启动RabbitMQ</h3><p>RabbitMQ的启动有两种方式：</p><ul><li><p>方式一: 直接启动</p><p>依赖于命令行面板，命令行关闭服务即关闭，</p><p>首次启动推荐这种</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rabbitmq-server start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>方式二: 后台启动</p><p>后台运行，不受命令行界面的影响</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rabbitmq-server -detached
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="登录web页面" tabindex="-1"><a class="header-anchor" href="#登录web页面" aria-hidden="true">#</a> 登录Web页面</h3><p>通过浏览器访问 IP:15672即可访问RabbitMQ的后台Web界面</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/08/25_15_43_1_cee6ba5799da494999ba1c0008af7bd1.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h2><h3 id="查看所有用户" tabindex="-1"><a class="header-anchor" href="#查看所有用户" aria-hidden="true">#</a> 查看所有用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl list_users
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加一个用户" tabindex="-1"><a class="header-anchor" href="#添加一个用户" aria-hidden="true">#</a> 添加一个用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl add_user liguangni <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置权限" tabindex="-1"><a class="header-anchor" href="#配置权限" aria-hidden="true">#</a> 配置权限</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl set_permissions <span class="token parameter variable">-p</span> <span class="token string">&quot;/&quot;</span> liguangni <span class="token string">&quot;.*&quot;</span> <span class="token string">&quot;.*&quot;</span> <span class="token string">&quot;.*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看用户权限" tabindex="-1"><a class="header-anchor" href="#查看用户权限" aria-hidden="true">#</a> 查看用户权限</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl list_user_permissions liguangni 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置tag" tabindex="-1"><a class="header-anchor" href="#设置tag" aria-hidden="true">#</a> 设置tag</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl set_user_tags liguangni administrator
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户" aria-hidden="true">#</a> 删除用户</h3><p>安全起见，删除默认用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl delete_user guest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="设置开机自启动" tabindex="-1"><a class="header-anchor" href="#设置开机自启动" aria-hidden="true">#</a> 设置开机自启动</h2><h3 id="创建rabbitmq引导文件" tabindex="-1"><a class="header-anchor" href="#创建rabbitmq引导文件" aria-hidden="true">#</a> 创建rabbitmq引导文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/init.d/
<span class="token function">vim</span> rabbitmq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件内容" tabindex="-1"><a class="header-anchor" href="#文件内容" aria-hidden="true">#</a> 文件内容</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#chkconfig:2345 61 61</span>

<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/usr/local/rabbitmq/
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/erlang/bin
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/rabbitmq/sbin
 
<span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span>
    start<span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Starting RabbitMQ ...&quot;</span>
    rabbitmq-server  <span class="token parameter variable">-detached</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
stop<span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Stopping RabbitMQ ...&quot;</span>
    rabbitmqctl stop
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
status<span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Status RabbitMQ ...&quot;</span>
    rabbitmqctl status
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
restart<span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Restarting RabbitMQ ...&quot;</span>
    rabbitmqctl stop
    rabbitmq-server  restart
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
 
*<span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Usage: <span class="token variable">$prog</span> {start|stop|status|restart}&quot;</span>
    <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>
<span class="token builtin class-name">exit</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="赋予执行权限" tabindex="-1"><a class="header-anchor" href="#赋予执行权限" aria-hidden="true">#</a> 赋予执行权限</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> rabbitmq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置开机启动" tabindex="-1"><a class="header-anchor" href="#设置开机启动" aria-hidden="true">#</a> 设置开机启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 添加rabbitmq服务到系统服务中</span>
<span class="token function">chkconfig</span> <span class="token parameter variable">--add</span> rabbitmq
<span class="token comment"># 设置自启动</span>
<span class="token function">chkconfig</span> rabbitmq on
<span class="token comment"># 查看自启动项是否设置成功</span>
<span class="token function">chkconfig</span> <span class="token parameter variable">--list</span> rabbitmq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重启验证" tabindex="-1"><a class="header-anchor" href="#重启验证" aria-hidden="true">#</a> 重启验证</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 重启命令</span>
<span class="token function">reboot</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,70);function z(y,w){const e=l("ExternalLinkIcon");return r(),d("div",null,[o,a("p",null,[n("下载地址: "),a("a",p,[n("https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.8.19"),s(e)])]),b,u,a("p",null,[n("下载地址: "),a("a",h,[n("https://erlang.org/download/otp_src_24.0.tar.gz"),s(e)])]),a("div",m,[v,g,k,f,a("p",null,[n("来自于github源"),_,a("a",x,[n("https://github.com/erlang/otp/releases/download/OTP-24.3.4.2/otp_src_24.3.4.2.tar.gz"),s(e)])])]),q])}const R=t(c,[["render",z],["__file","60-1692945794533.html.vue"]]);export{R as default};
