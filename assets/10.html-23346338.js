import{_ as o,r as c,o as i,c as n,d as r,e,b as t,f as d}from"./app-19e0b0f0.js";const h={},l=r("h2",{id:"什么是docker",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#什么是docker","aria-hidden":"true"},"#"),e(" 什么是Docker")],-1),s={href:"https://www.runoob.com/go/go-tutorial.html",target:"_blank",rel:"noopener noreferrer"},p=d('<p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><p>Docker 从 17.03 版本之后分为 CE（Community Edition: 社区版） 和 EE（Enterprise Edition: 企业版），我们用社区版就可以了。</p><h2 id="docker的应用场景" tabindex="-1"><a class="header-anchor" href="#docker的应用场景" aria-hidden="true">#</a> Docker的应用场景</h2><ul><li>Web 应用的自动化打包和发布。</li><li>自动化测试和持续集成、发布。</li><li>在服务型环境中部署和调整数据库或其他的后台应用。</li><li>从头编译或者扩展现有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。</li></ul><h2 id="docker-的优点" tabindex="-1"><a class="header-anchor" href="#docker-的优点" aria-hidden="true">#</a> Docker 的优点</h2><p>Docker 是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p><h3 id="快速-一致地交付您的应用程序" tabindex="-1"><a class="header-anchor" href="#快速-一致地交付您的应用程序" aria-hidden="true">#</a> 快速，一致地交付您的应用程序</h3><p>Docker 允许开发人员使用您提供的应用程序或服务的本地容器在标准化环境中工作，从而简化了开发的生命周期。</p><p>容器非常适合持续集成和持续交付（CI / CD）工作流程，请考虑以下示例方案：</p><ul><li>您的开发人员在本地编写代码，并使用 Docker 容器与同事共享他们的工作。</li><li>他们使用 Docker 将其应用程序推送到测试环境中，并执行自动或手动测试。</li><li>当开发人员发现错误时，他们可以在开发环境中对其进行修复，然后将其重新部署到测试环境中，以进行测试和验证。</li><li>测试完成后，将修补程序推送给生产环境，就像将更新的镜像推送到生产环境一样简单。</li></ul><h3 id="响应式部署和扩展" tabindex="-1"><a class="header-anchor" href="#响应式部署和扩展" aria-hidden="true">#</a> 响应式部署和扩展</h3><p>Docker 是基于容器的平台，允许高度可移植的工作负载。Docker 容器可以在开发人员的本机上，数据中心的物理或虚拟机上，云服务上或混合环境中运行。</p><p>Docker 的可移植性和轻量级的特性，还可以使您轻松地完成动态管理的工作负担，并根据业务需求指示，实时扩展或拆除应用程序和服务。</p><h3 id="在同一硬件上运行更多工作负载" tabindex="-1"><a class="header-anchor" href="#在同一硬件上运行更多工作负载" aria-hidden="true">#</a> 在同一硬件上运行更多工作负载</h3><p>Docker 轻巧快速。它为基于虚拟机管理程序的虚拟机提供了可行、经济、高效的替代方案，因此您可以利用更多的计算能力来实现业务目标。Docker 非常适合于高密度环境以及中小型部署，而您可以用更少的资源做更多的事情。</p>',16);function k(u,_){const a=c("ExternalLinkIcon");return i(),n("div",null,[l,r("p",null,[e("Docker 是一个开源的应用容器引擎，基于 "),r("a",s,[e("Go 语言"),t(a)]),e(" 并遵从 Apache2.0 协议开源。")]),p])}const f=o(h,[["render",k],["__file","10.html.vue"]]);export{f as default};
