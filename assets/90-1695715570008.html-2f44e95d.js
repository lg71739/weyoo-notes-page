import{_ as i,r,o as t,c as o,d as e,e as a,b as c,f as n}from"./app-19e0b0f0.js";const d={},p=n(`<h1 id="minio文件存储的安装与配置" tabindex="-1"><a class="header-anchor" href="#minio文件存储的安装与配置" aria-hidden="true">#</a> Minio文件存储的安装与配置</h1><h2 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像" aria-hidden="true">#</a> 拉取镜像</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull minio/minio
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="创建并启动容器" tabindex="-1"><a class="header-anchor" href="#创建并启动容器" aria-hidden="true">#</a> 创建并启动容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> minio <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">9090</span>:9090 <span class="token parameter variable">-e</span> <span class="token string">&quot;MINIO_ACCESS_KEY=admin&quot;</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;MINIO_SECRET_KEY=admin123&quot;</span> <span class="token parameter variable">-v</span> /mydata/minio/data:/data minio/minio server /data --console-address <span class="token string">&quot;:9090&quot;</span> <span class="token parameter variable">-address</span> <span class="token string">&quot;:9000&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">命令解释：</p><p>（1）每行结尾的 \\ ，表示命令还没输入完，先不要执行。<br> （2）-p 容器内部端口绑定到指定的主机端口，9000是minio服务端口，用于服务的链接和请求； 9090是minio客户端端口，用于访问管理界面。<br> （3）--name 指定容器名称。<br> （4）--restart=always重启参数，重启docker时自动重启容器。<br> （5）MINIO_ACCESS_KEY为设置minio登录名，不少于3个字符；MINIO_SECRET_KEY为设置minio登录密码，不少于8个字符。<br> （6）-v 指定挂载目录，“ : ”前为宿主机目录，“ : ”后为容器中的目录，minio上传的文件默认存储在容器中的/data目录下，若不挂载到宿主机，删除容器则删除文件，若将存储目录挂载到宿主机，删除容器不会删除宿主机挂载目录下的文件。<br> （7）--console-address 指定客户端端口；-address 指定服务端端口.</p></div><h2 id="测试访问" tabindex="-1"><a class="header-anchor" href="#测试访问" aria-hidden="true">#</a> 测试访问</h2>`,7),l={href:"http://ip:9090",target:"_blank",rel:"noopener noreferrer"},m=n('<figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/09/26_16_9_53_image-20230926160953680.png" alt="image-20230926160953680" tabindex="0" loading="lazy"><figcaption>image-20230926160953680</figcaption></figure><h2 id="minio的配置" tabindex="-1"><a class="header-anchor" href="#minio的配置" aria-hidden="true">#</a> Minio的配置</h2><h3 id="配置访问策略-解决403异常" tabindex="-1"><a class="header-anchor" href="#配置访问策略-解决403异常" aria-hidden="true">#</a> 配置访问策略(解决403异常)</h3><p>在上传完文件后，访问对应的文件时，会出现403访问异常。</p><p>解决方案：</p><p>点击对应的桶Bucket，在Summary选项卡中设置 Access Policy，将其设置为public模式即可</p><figure><img src="https://jihulab.com/byzh123/images/-/raw/images/pictures/2023/09/26_16_40_9_image-20230926164009421.png" alt="image-20230926164009421" tabindex="0" loading="lazy"><figcaption>image-20230926164009421</figcaption></figure>',7);function h(u,b){const s=r("ExternalLinkIcon");return t(),o("div",null,[p,e("p",null,[a("访问"),e("a",l,[a("http://ip:9090"),c(s)]),a("，出现登录页面则部署成功。")]),m])}const g=i(d,[["render",h],["__file","90-1695715570008.html.vue"]]);export{g as default};
